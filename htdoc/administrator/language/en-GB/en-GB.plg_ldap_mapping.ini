; Shmanic LDAP Group Mapping Plugin en-GB Translations
; Copyright (C) 2011-2013 Shaun Maunder. All rights reserved.
; License GNU General Public License version 2 or later; see LICENSE.txt
; Note : All ini files need to be saved as UTF-8

PLG_LDAP_MAPPING="LDAP - Group Mapping"

PLG_LDAP_MAPPING_FIELD_ONLOGIN_LABEL="Sync on Login"
PLG_LDAP_MAPPING_FIELD_ONLOGIN_DESC="Synchronise the LDAP group mapping when a user logs in."

PLG_LDAP_MAPPING_FIELD_ABORT_LOGIN_LABEL="Abort Login"
PLG_LDAP_MAPPING_FIELD_ABORT_LOGIN_DESC="Abort the user login procedure if group mapping fails to synchronise on login."

PLG_LDAP_MAPPING_FIELD_SYNC_GROUPS_LABEL="Sync Groups"
PLG_LDAP_MAPPING_FIELD_SYNC_GROUPS_DESC="Specify the synchronisation mode for groups. <br /><br /><strong>Pull Only</strong>: groups will only be pulled (downloaded) from LDAP. <br /><br /><strong>Push and Pull</strong>: groups will be both pulled (downloaded) and pushed (uploaded) to LDAP. This means the user groups on the LDAP server will be modified. The proxy user specified in the LDAP host configuration must have adequate write permissions to promote and demote users in the directory."
PLG_LDAP_MAPPING_FIELD_SYNC_YESFL="Pull Only"
PLG_LDAP_MAPPING_FIELD_SYNC_YESTFL="Push and Pull"

PLG_LDAP_MAPPING_FIELD_ADD_LABEL="Allow Additions"
PLG_LDAP_MAPPING_FIELD_ADD_DESC="Specifies whether to allow group additions to user objects. This also allows groups to be added back to LDAP users if the Push and Pull setting was defined for Sync Groups."

PLG_LDAP_MAPPING_FIELD_REMOVE_LABEL="Allow Removals"
PLG_LDAP_MAPPING_FIELD_REMOVE_DESC="Specifies whether to allow group removals from user objects. This also allows groups to be removed from LDAP users if the Push and Pull setting was defined for Sync Groups. <br /><br />If set to <strong>Yes &amp; Default Managed</strong>: allows the plug-in to remove managed groups from users if they do not satisfy any conditions for a specified Joomla group ID from the &#39;Mapping List&#39;. Also, all Joomla groups are defaulted as managed with this setting. <br /><br />If set to <strong>Yes</strong>: same as 'Yes &amp; Default Managed' except that that all Joomla groups are defaulted as unmanaged. <br /><br />If set to <strong>No</strong>: the plug-in never removes any groups from a user."
PLG_LDAP_MAPPING_FIELD_REMOVE_NO="No"
PLG_LDAP_MAPPING_FIELD_REMOVE_YES="Yes"
PLG_LDAP_MAPPING_FIELD_REMOVE_YESDEFAULT="Yes & Default Managed"

PLG_LDAP_MAPPING_FIELD_UNMANAGED_LABEL="Unmanaged Groups"
PLG_LDAP_MAPPING_FIELD_UNMANAGED_DESC="Specify Joomla group ID's delimited by a semicolon that should be overridden to an unmanaged state. In this context, unmanaged means specified Joomla groups are never removed from a user even if they exist in the &#39;Mapping List&#39;. This doesn't affect groups being added to users, only the removal of them."

PLG_LDAP_MAPPING_FIELD_PUBLICID_LABEL="Registered Group"
PLG_LDAP_MAPPING_FIELD_PUBLICID_DESC="Specify Joomla's registered group ID used when a user has no mappings. Joomla fails to save users when they have no group associations, therefore one always needs to be mapped. In a default installation, the registered group ID is <strong>2</strong>."

PLG_LDAP_MAPPING_FIELD_LIST_LABEL="Mapping List"
PLG_LDAP_MAPPING_FIELD_LIST_DESC="Specify the list of group mapping entries. Each entry is made up of a LDAP Group DN (pointing at a group object), and one or more Joomla group ID's. Use a colon to separate the Group DN from the Joomla group ID(s). Adding multiple group ID's for one LDAP DN can be achieved with a comma between each group ID. Each entry should use the form: <br /><strong>&lt;Group DN&gt;:&lt;Joomla Group IDs&gt;</strong><br /> Multiple entries can be achieved with a newline. For example the following:<ul><li>CN=Group1,DC=MyDomain,DC=Local:3,5</li><li>CN=Group2,DC=MyDomain,DC=Local:3 </li></ul>Adds the Joomla group ID 3 to both group1 and group2 users, while Joomla group ID 5 to group1 users only. It should be noted that after a Joomla group ID is specified on any entry within the list, that Joomla group is labelled as managed unless specified in the 'Unmanaged Groups' list. See further usage and examples at the documentation guide."

PLG_LDAP_MAPPING_FIELD_DNVALIDATE_LABEL="Validate DNs"
PLG_LDAP_MAPPING_FIELD_DNVALIDATE_DESC="Specify whether to validate each DN located in the &#39;Mapping List&#39; with PHP's ldap_explode_dn function."

PLG_LDAP_MAPPING_FIELD_LOOKUPTYPE_LABEL="Lookup Type"
PLG_LDAP_MAPPING_FIELD_LOOKUPTYPE_DESC="In most cases, setting to either value should return the same groups. Set the best (or only) option for the environment. The option specified here is also used for recursion when enabled."
PLG_LDAP_MAPPING_FIELD_LOOKUPTYPE_FORWARD="Forward"
PLG_LDAP_MAPPING_FIELD_LOOKUPTYPE_REVERSE="Reverse"

PLG_LDAP_MAPPING_FIELD_MEMBEROF_ATTRIBUTE_LABEL="Memberof Attribute"
PLG_LDAP_MAPPING_FIELD_MEMBEROF_ATTRIBUTE_DESC="Specify the attribute in LDAP that successfully returns the group from the user object (used for Forward Lookups). This attribute has to exist within the user object and may only get returned when specifically requested. <br /><br />Use <strong>memberOf</strong> for either Active Directory or OpenLDAP using the memberOf overlay. <br /><br />Use <strong>groupMembership</strong> for eDirectory."

PLG_LDAP_MAPPING_FIELD_MEMBER_ATTRIBUTE_LABEL="Member Attribute"
PLG_LDAP_MAPPING_FIELD_MEMBER_ATTRIBUTE_DESC="Specify the attribute in LDAP that successfully returns users from group objects (used for Reverse Lookups and Push Sync). This attribute has to exist within the group object. <br /><br />Use <strong>member</strong> for the majority of LDAP systems including Active Directory, eDirectory and OpenLDAP using standard schemas."

PLG_LDAP_MAPPING_FIELD_MEMBER_DN_LABEL="Member DN Attribute"
PLG_LDAP_MAPPING_FIELD_MEMBER_DN_DESC="Specify the user object attribute to use when searching for group membership (used for Reverse Lookups and Push Sync). Some LDAP schemas do not use a full DN to map group members and instead use the uid attribute. <br /><br />For most schemas, <strong>dn</strong> is the correct setting."

PLG_LDAP_MAPPING_FIELD_USERECURSION_LABEL="Use Recursion"
PLG_LDAP_MAPPING_FIELD_USERECURSION_DESC="Recursion can be used to find nested groups (i.e. groups of members of groups). However, depending on the amount of groups in the LDAP directory, this could degrade performance of the LDAP server."

PLG_LDAP_MAPPING_FIELD_DNATTRIBUTE_LABEL="DN Attribute"
PLG_LDAP_MAPPING_FIELD_DNATTRIBUTE_DESC="Specify the attribute in LDAP that returns the Distinguished Name (DN) of a object. This is used to perform recursive forward lookups."

PLG_LDAP_MAPPING_FIELD_RECURSIONDEPTH_LABEL="Max Depth"
PLG_LDAP_MAPPING_FIELD_RECURSIONDEPTH_DESC="Set the maximum recursive depth for nested groups. Set this value to <strong>0</strong> for unlimited depth."

PLG_LDAP_MAPPING_ERR_12031="Failed to find the member dn attribute in the Ldap user '%1$s'."
PLG_LDAP_MAPPING_ERR_12034="Failed to add LDAP group '%1$s' to Ldap user '%2$s'."
PLG_LDAP_MAPPING_ERR_12036="Failed to remove LDAP group '%1$s' from Ldap user '%2$s'."

PLG_LDAP_MAPPING_INFO_12038="Successfully added LDAP group '%2$s' to LDAP user '%1$s'."
PLG_LDAP_MAPPING_INFO_12039="Successfully removed LDAP group '%2$s' from LDAP user '%1$s'."

PLG_LDAP_MAPPING_DEBUG_12006="No valid Ldap group mapping parameters."
PLG_LDAP_MAPPING_DEBUG_12008="No matching Ldap groups for the user '%1$s'."
PLG_LDAP_MAPPING_DEBUG_12011="Adding Joomla group %1$d to user '%2$s'."
PLG_LDAP_MAPPING_DEBUG_12013="Removing Joomla group %1$d from user '%2$s'."

PLG_LDAP_MAPPING_XML_DESCRIPTION="Handles LDAP user group mapping with support for bi-directional synchronisation with the LDAP server. <br /><br />Further configuration examples can be found on the <a href="_QQ_"http://shmanic.com/tools/jmapmyldap/documentation/ver-2-mapping-plugin.htm"_QQ_">group mapping</a> documentation web page."
